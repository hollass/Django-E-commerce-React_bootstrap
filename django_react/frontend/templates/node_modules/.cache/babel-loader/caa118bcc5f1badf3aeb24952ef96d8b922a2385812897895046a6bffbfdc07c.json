{"ast":null,"code":"import axios from 'axios';\n\n// Проверим в самом начале, есть ли токен в хранилище\nconst JWTToken = localStorage.getItem('jwt');\nconsole.log(localStorage);\n// Создать инстанс axios\nconst api = axios.create({\n  baseURL: `http://localhost:8000`\n});\nconsole.log(api);\nfunction apiSetHeader(name, value) {\n  if (value) {\n    api.defaults.headers[name] = value;\n  }\n}\n;\n\n// Если токен есть, то добавим заголовок к запросам\nif (JWTToken) {\n  apiSetHeader('Authorization', `Bearer ${JWTToken}`);\n}\napi.interceptors.request.use(config => {\n  // Если пользователь делает запрос и у него нет заголовка с токеном, то...\n  if (!config.defaults.headers['Authorization']) {\n    // Тут пишем редирект если не авторизован\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;\nexport { apiSetHeader };","map":{"version":3,"names":["axios","JWTToken","localStorage","getItem","console","log","api","create","baseURL","apiSetHeader","name","value","defaults","headers","interceptors","request","use","config","error","Promise","reject"],"sources":["C:/Users/Vladimir/Desktop/shops/django_react/frontend/templates/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Проверим в самом начале, есть ли токен в хранилище\r\nconst JWTToken = localStorage.getItem('jwt');\r\nconsole.log(localStorage)\r\n// Создать инстанс axios\r\nconst api = axios.create({\r\n    baseURL: `http://localhost:8000`\r\n});\r\nconsole.log(api)\r\nfunction apiSetHeader(name, value) {\r\n    if (value) {\r\n        api.defaults.headers[name] = value;\r\n    }\r\n};\r\n\r\n// Если токен есть, то добавим заголовок к запросам\r\nif (JWTToken) {\r\n    apiSetHeader('Authorization', `Bearer ${JWTToken}`);\r\n}\r\n\r\napi.interceptors.request.use(config => {\r\n    // Если пользователь делает запрос и у него нет заголовка с токеном, то...\r\n    if (!config.defaults.headers['Authorization']) {\r\n        // Тут пишем редирект если не авторизован\r\n    }\r\n\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\nexport default api;\r\n\r\nexport {apiSetHeader}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;AAC5CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;AACzB;AACA,MAAMI,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AACFJ,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;AAChB,SAASG,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC/B,IAAIA,KAAK,EAAE;IACPL,GAAG,CAACM,QAAQ,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGC,KAAK;EACtC;AACJ;AAAC;;AAED;AACA,IAAIV,QAAQ,EAAE;EACVQ,YAAY,CAAC,eAAe,EAAE,UAAUR,QAAQ,EAAE,CAAC;AACvD;AAEAK,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACnC;EACA,IAAI,CAACA,MAAM,CAACL,QAAQ,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;IAC3C;EAAA;EAGJ,OAAOI,MAAM;AACjB,CAAC,EAAEC,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF,eAAeZ,GAAG;AAElB,SAAQG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}