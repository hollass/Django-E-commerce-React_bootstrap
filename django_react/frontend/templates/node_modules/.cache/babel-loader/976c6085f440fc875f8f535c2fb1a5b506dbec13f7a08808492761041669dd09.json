{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladimir\\\\Desktop\\\\shops\\\\django_react\\\\frontend\\\\templates\\\\src\\\\pages\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const serverUrl = 'http://localhost:8000/';\n  const [isCsrf, setIsCsrf] = useState(null);\n  const [isPhone, setIsisPhone] = useState('');\n  const [isPassword, setIsPassword] = useState('');\n  const [isError, setIsError] = useState(null);\n  const [isAuth, setIsAuth] = useState(false);\n  const [IsName, setIsName] = useState('');\n\n  // При первой загрузке страницы мы спрашиваем, авторизован ли пользователь\n  useEffect(() => {\n    getSession();\n  }, []);\n  const isResponseOk = res => {\n    if (!(res.status >= 200 && res.status <= 299)) {\n      throw Error(res.statusText);\n    }\n  };\n\n  // Если необходимо авторизоваться, запрашиваем CSRF-токен у сервера\n  const getCSRF = () => {\n    axios.get(serverUrl + 'api/csrf/', {\n      withCredentials: true\n    }).then(res => {\n      isResponseOk(res);\n      const csrfToken = res.headers.get('X-CSRFToken');\n      setIsCsrf(csrfToken);\n    }).catch(err => console.error(err));\n  };\n\n  // withCredentials:true - аналогия директивы credentials='include'\n  const getSession = () => {\n    axios.get(serverUrl + \"api/session/\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.isAuthenticated) {\n        setUserId(res.data.user_id);\n        setUsername(res.data.username);\n        setIsAuth(true);\n        return;\n      }\n      setIsAuth(false);\n      getCSRF();\n    }).catch(err => console.error(err));\n  };\n\n  // Полученный CSRF-токен пихаем в заголовок и отправляем серверу\n  const login = () => {\n    const data = {\n      username: isLogin,\n      password: isPassword\n    };\n    axios.post(serverUrl + \"api/login/\", data, {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": isCsrf\n      }\n    }).then(res => {\n      isResponseOk(res);\n      setIsAuth(true);\n      setIsLogin('');\n      setIsPassword('');\n      setIsError(null);\n      userInfo();\n    }).catch(err => {\n      console.error(err);\n      setIsError(\"Неверные данные\");\n    });\n  };\n  const register = () => {\n    const data = {\n      name: IsName,\n      password: isPassword,\n      phone: isPhone\n    };\n    axios.post(serverUrl + \"api/register/\", data, {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": isCsrf\n      }\n    }).then(res => {\n      isResponseOk(res);\n      setIsAuth(true);\n      setIsName('');\n      setIsPassword('');\n      setIsError(null);\n      userInfo();\n    }).catch(err => {\n      console.error(err);\n      setIsError(\"Неверные данные\");\n    });\n  };\n  const logout = () => {\n    axios.get(serverUrl + \"api/logout\", {\n      withCredentials: true\n    }).then(res => {\n      isResponseOk(res);\n      setIsAuth(false);\n      getCSRF();\n    }).catch(err => console.error(err));\n  };\n  const killAllSessions = () => {\n    axios.get(serverUrl + \"api/kill_all_sessions/\", {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      isResponseOk(res);\n      console.log(res.data.detail);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  function changePassword(e) {\n    setIsPassword(e.target.value);\n  }\n  function submitForm(e) {\n    e.preventDefault();\n    login();\n  }\n  function changeName(e) {\n    setIsLogin(e.target.value);\n  }\n  function submitForm(e) {\n    e.preventDefault();\n    login();\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: !isAuth ? /*#__PURE__*/_jsxDEV(Form, {\n      className: 'card-registration',\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"name\",\n        children: \"\\u0424\\u0418\\u041E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"name\",\n        name: \"name\",\n        id: \"name\",\n        className: \"{style.field}\",\n        onChange: changePassword,\n        value: IsName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"phone\",\n        children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"tel\",\n        name: \"phone\",\n        id: \"phone\",\n        className: \"{style.field}\",\n        onChange: changeLogin,\n        value: isPhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"password\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        className: \"{style.field}\",\n        onChange: changePassword,\n        value: isPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"{style.error}\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n        onClick: submitForm,\n        className: \"{style.sendBtn}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"{style.btnContainer}\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0412\\u044B\\u0439\\u0442\\u0438\",\n        onClick: logout,\n        className: \"{style.logoutBtn}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0423\\u0431\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435 \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438\",\n        onClick: killAllSessions,\n        className: \"{style.killAllSessionsBtn}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"LKPQoHVI/sfg6V96orbUcGLNN44=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Form","jsxDEV","_jsxDEV","Login","_s","serverUrl","isCsrf","setIsCsrf","isPhone","setIsisPhone","isPassword","setIsPassword","isError","setIsError","isAuth","setIsAuth","IsName","setIsName","getSession","isResponseOk","res","status","Error","statusText","getCSRF","get","withCredentials","then","csrfToken","headers","catch","err","console","error","data","isAuthenticated","setUserId","user_id","setUsername","username","login","isLogin","password","post","setIsLogin","userInfo","register","name","phone","logout","killAllSessions","log","detail","changePassword","e","target","value","submitForm","preventDefault","changeName","children","className","Label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","onChange","changeLogin","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vladimir/Desktop/shops/django_react/frontend/templates/src/pages/register.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Container, Form} from \"react-bootstrap\";\r\n\r\nexport default function Login() {\r\n    const serverUrl = 'http://localhost:8000/'\r\n\r\n    const [isCsrf, setIsCsrf] = useState(null)\r\n    const [isPhone, setIsisPhone] = useState('')\r\n    const [isPassword, setIsPassword] = useState('')\r\n    const [isError, setIsError] = useState(null)\r\n    const [isAuth, setIsAuth] = useState(false)\r\n\r\n    const [IsName, setIsName] = useState('')\r\n\r\n    // При первой загрузке страницы мы спрашиваем, авторизован ли пользователь\r\n    useEffect(() => {\r\n        getSession()\r\n    }, [])\r\n\r\n    const isResponseOk = (res) => {\r\n        if (!(res.status >= 200 && res.status <= 299)) {\r\n            throw Error(res.statusText);\r\n        }\r\n    }\r\n\r\n    // Если необходимо авторизоваться, запрашиваем CSRF-токен у сервера\r\n    const getCSRF = () => {\r\n        axios.get(serverUrl + 'api/csrf/', {withCredentials: true})\r\n            .then((res) => {\r\n                isResponseOk(res)\r\n\r\n                const csrfToken = res.headers.get('X-CSRFToken')\r\n                setIsCsrf(csrfToken)\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    // withCredentials:true - аналогия директивы credentials='include'\r\n    const getSession = () => {\r\n        axios.get(serverUrl + \"api/session/\", {withCredentials: true})\r\n            .then((res) => {\r\n                if (res.data.isAuthenticated) {\r\n                    setUserId(res.data.user_id)\r\n                    setUsername(res.data.username)\r\n                    setIsAuth(true)\r\n                    return\r\n                }\r\n\r\n                setIsAuth(false)\r\n                getCSRF()\r\n            })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    // Полученный CSRF-токен пихаем в заголовок и отправляем серверу\r\n    const login = () => {\r\n        const data = {username: isLogin, password: isPassword}\r\n        axios.post(serverUrl + \"api/login/\", data, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-CSRFToken\": isCsrf,\r\n            }\r\n        })\r\n            .then((res) => {\r\n                isResponseOk(res)\r\n                setIsAuth(true)\r\n                setIsLogin('')\r\n                setIsPassword('')\r\n                setIsError(null)\r\n\r\n                userInfo()\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                setIsError(\"Неверные данные\")\r\n            });\r\n    }\r\n\r\n    const register = () => {\r\n        const data = {name: IsName, password: isPassword, phone: isPhone}\r\n        axios.post(serverUrl + \"api/register/\", data, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-CSRFToken\": isCsrf,\r\n            }\r\n        })\r\n            .then((res) => {\r\n                isResponseOk(res)\r\n                setIsAuth(true)\r\n                setIsName('')\r\n                setIsPassword('')\r\n                setIsError(null)\r\n\r\n                userInfo()\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                setIsError(\"Неверные данные\")\r\n            });\r\n    }\r\n\r\n    const logout = () => {\r\n        axios.get(serverUrl + \"api/logout\", {withCredentials: true})\r\n            .then((res) => {\r\n                isResponseOk(res)\r\n                setIsAuth(false);\r\n                getCSRF();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n\r\n    const killAllSessions = () => {\r\n        axios.get(serverUrl + \"api/kill_all_sessions/\", {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => {\r\n                isResponseOk(res)\r\n                console.log(res.data.detail)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    function changePassword(e) {\r\n        setIsPassword(e.target.value)\r\n    }\r\n\r\n\r\n    function submitForm(e) {\r\n        e.preventDefault()\r\n        login()\r\n    }\r\n    function changeName(e) {\r\n        setIsLogin(e.target.value)\r\n    }\r\n\r\n    function submitForm(e) {\r\n        e.preventDefault()\r\n        login()\r\n    }\r\n\r\n    return (\r\n        <Container>{\r\n            !isAuth ?\r\n                <Form className={'card-registration'}>\r\n                    <Form.Label htmlFor=\"name\">ФИО</Form.Label>\r\n                    <Form.Control\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className='{style.field}'\r\n                        onChange={changePassword}\r\n                        value={IsName}\r\n                    />\r\n                    <Form.Label htmlFor=\"phone\">Логин</Form.Label>\r\n                    <Form.Control\r\n                        type=\"tel\"\r\n                        name=\"phone\"\r\n                        id=\"phone\"\r\n                        className='{style.field}'\r\n                        onChange={changeLogin}\r\n                        value={isPhone}\r\n                    />\r\n\r\n                    <Form.Label htmlFor=\"password\">Пароль</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        className='{style.field}'\r\n                        onChange={changePassword}\r\n                        value={isPassword}\r\n                    />\r\n\r\n                    {\r\n                        isError ? <div className='{style.error}'>{isError}</div> : null\r\n                    }\r\n\r\n                    <input type=\"submit\" value='Войти' onClick={submitForm} className='{style.sendBtn}'/>\r\n                </Form>\r\n                :\r\n                <div className='{style.btnContainer}'>\r\n                    <input type=\"submit\" value='Выйти' onClick={logout} className='{style.logoutBtn}'/>\r\n                    <input type=\"submit\" value='Убить все сессии' onClick={killAllSessions}\r\n                           className='{style.killAllSessionsBtn}'/>\r\n                </div>\r\n\r\n        }\r\n        </Container>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,SAAS,GAAG,wBAAwB;EAE1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZsB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC1B,IAAI,EAAEA,GAAG,CAACC,MAAM,IAAI,GAAG,IAAID,GAAG,CAACC,MAAM,IAAI,GAAG,CAAC,EAAE;MAC3C,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAU,CAAC;IAC/B;EACJ,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB1B,KAAK,CAAC2B,GAAG,CAACpB,SAAS,GAAG,WAAW,EAAE;MAACqB,eAAe,EAAE;IAAI,CAAC,CAAC,CACtDC,IAAI,CAAEP,GAAG,IAAK;MACXD,YAAY,CAACC,GAAG,CAAC;MAEjB,MAAMQ,SAAS,GAAGR,GAAG,CAACS,OAAO,CAACJ,GAAG,CAAC,aAAa,CAAC;MAChDlB,SAAS,CAACqB,SAAS,CAAC;IACxB,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMb,UAAU,GAAGA,CAAA,KAAM;IACrBpB,KAAK,CAAC2B,GAAG,CAACpB,SAAS,GAAG,cAAc,EAAE;MAACqB,eAAe,EAAE;IAAI,CAAC,CAAC,CACzDC,IAAI,CAAEP,GAAG,IAAK;MACX,IAAIA,GAAG,CAACc,IAAI,CAACC,eAAe,EAAE;QAC1BC,SAAS,CAAChB,GAAG,CAACc,IAAI,CAACG,OAAO,CAAC;QAC3BC,WAAW,CAAClB,GAAG,CAACc,IAAI,CAACK,QAAQ,CAAC;QAC9BxB,SAAS,CAAC,IAAI,CAAC;QACf;MACJ;MAEAA,SAAS,CAAC,KAAK,CAAC;MAChBS,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAChB,MAAMN,IAAI,GAAG;MAACK,QAAQ,EAAEE,OAAO;MAAEC,QAAQ,EAAEhC;IAAU,CAAC;IACtDZ,KAAK,CAAC6C,IAAI,CAACtC,SAAS,GAAG,YAAY,EAAE6B,IAAI,EAAE;MACvCR,eAAe,EAAE,IAAI;MACrBG,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,aAAa,EAAEvB;MACnB;IACJ,CAAC,CAAC,CACGqB,IAAI,CAAEP,GAAG,IAAK;MACXD,YAAY,CAACC,GAAG,CAAC;MACjBL,SAAS,CAAC,IAAI,CAAC;MACf6B,UAAU,CAAC,EAAE,CAAC;MACdjC,aAAa,CAAC,EAAE,CAAC;MACjBE,UAAU,CAAC,IAAI,CAAC;MAEhBgC,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC,CACDf,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBlB,UAAU,CAAC,iBAAiB,CAAC;IACjC,CAAC,CAAC;EACV,CAAC;EAED,MAAMiC,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMZ,IAAI,GAAG;MAACa,IAAI,EAAE/B,MAAM;MAAE0B,QAAQ,EAAEhC,UAAU;MAAEsC,KAAK,EAAExC;IAAO,CAAC;IACjEV,KAAK,CAAC6C,IAAI,CAACtC,SAAS,GAAG,eAAe,EAAE6B,IAAI,EAAE;MAC1CR,eAAe,EAAE,IAAI;MACrBG,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,aAAa,EAAEvB;MACnB;IACJ,CAAC,CAAC,CACGqB,IAAI,CAAEP,GAAG,IAAK;MACXD,YAAY,CAACC,GAAG,CAAC;MACjBL,SAAS,CAAC,IAAI,CAAC;MACfE,SAAS,CAAC,EAAE,CAAC;MACbN,aAAa,CAAC,EAAE,CAAC;MACjBE,UAAU,CAAC,IAAI,CAAC;MAEhBgC,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC,CACDf,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBlB,UAAU,CAAC,iBAAiB,CAAC;IACjC,CAAC,CAAC;EACV,CAAC;EAED,MAAMoC,MAAM,GAAGA,CAAA,KAAM;IACjBnD,KAAK,CAAC2B,GAAG,CAACpB,SAAS,GAAG,YAAY,EAAE;MAACqB,eAAe,EAAE;IAAI,CAAC,CAAC,CACvDC,IAAI,CAAEP,GAAG,IAAK;MACXD,YAAY,CAACC,GAAG,CAAC;MACjBL,SAAS,CAAC,KAAK,CAAC;MAChBS,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC;EAGD,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC1BpD,KAAK,CAAC2B,GAAG,CAACpB,SAAS,GAAG,wBAAwB,EAAE;MAC5CqB,eAAe,EAAE,IAAI;MACrBG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGF,IAAI,CAAEP,GAAG,IAAK;MACXD,YAAY,CAACC,GAAG,CAAC;MACjBY,OAAO,CAACmB,GAAG,CAAC/B,GAAG,CAACc,IAAI,CAACkB,MAAM,CAAC;IAChC,CAAC,CAAC,CACDtB,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACmB,GAAG,CAACpB,GAAG,CAAC;IACpB,CAAC,CAAC;EACV,CAAC;EAED,SAASsB,cAAcA,CAACC,CAAC,EAAE;IACvB3C,aAAa,CAAC2C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;EAGA,SAASC,UAAUA,CAACH,CAAC,EAAE;IACnBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBlB,KAAK,CAAC,CAAC;EACX;EACA,SAASmB,UAAUA,CAACL,CAAC,EAAE;IACnBV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EAEA,SAASC,UAAUA,CAACH,CAAC,EAAE;IACnBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBlB,KAAK,CAAC,CAAC;EACX;EAEA,oBACItC,OAAA,CAACH,SAAS;IAAA6D,QAAA,EACN,CAAC9C,MAAM,gBACHZ,OAAA,CAACF,IAAI;MAAC6D,SAAS,EAAE,mBAAoB;MAAAD,QAAA,gBACjC1D,OAAA,CAACF,IAAI,CAAC8D,KAAK;QAACC,OAAO,EAAC,MAAM;QAAAH,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC3CjE,OAAA,CAACF,IAAI,CAACoE,OAAO;QACTC,IAAI,EAAC,MAAM;QACXtB,IAAI,EAAC,MAAM;QACXuB,EAAE,EAAC,MAAM;QACTT,SAAS,EAAC,eAAe;QACzBU,QAAQ,EAAElB,cAAe;QACzBG,KAAK,EAAExC;MAAO;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACFjE,OAAA,CAACF,IAAI,CAAC8D,KAAK;QAACC,OAAO,EAAC,OAAO;QAAAH,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC9CjE,OAAA,CAACF,IAAI,CAACoE,OAAO;QACTC,IAAI,EAAC,KAAK;QACVtB,IAAI,EAAC,OAAO;QACZuB,EAAE,EAAC,OAAO;QACVT,SAAS,EAAC,eAAe;QACzBU,QAAQ,EAAEC,WAAY;QACtBhB,KAAK,EAAEhD;MAAQ;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEFjE,OAAA,CAACF,IAAI,CAAC8D,KAAK;QAACC,OAAO,EAAC,UAAU;QAAAH,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAClDjE,OAAA,CAACF,IAAI,CAACoE,OAAO;QACTC,IAAI,EAAC,UAAU;QACftB,IAAI,EAAC,UAAU;QACfuB,EAAE,EAAC,UAAU;QACbT,SAAS,EAAC,eAAe;QACzBU,QAAQ,EAAElB,cAAe;QACzBG,KAAK,EAAE9C;MAAW;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EAGEvD,OAAO,gBAAGV,OAAA;QAAK2D,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAEhD;MAAO;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG,IAAI,eAGnEjE,OAAA;QAAOmE,IAAI,EAAC,QAAQ;QAACb,KAAK,EAAC,gCAAO;QAACiB,OAAO,EAAEhB,UAAW;QAACI,SAAS,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,gBAEPjE,OAAA;MAAK2D,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACjC1D,OAAA;QAAOmE,IAAI,EAAC,QAAQ;QAACb,KAAK,EAAC,gCAAO;QAACiB,OAAO,EAAExB,MAAO;QAACY,SAAS,EAAC;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnFjE,OAAA;QAAOmE,IAAI,EAAC,QAAQ;QAACb,KAAK,EAAC,wFAAkB;QAACiB,OAAO,EAAEvB,eAAgB;QAChEW,SAAS,EAAC;MAA4B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEpB;AAAC/D,EAAA,CAlMuBD,KAAK;AAAAuE,EAAA,GAALvE,KAAK;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}