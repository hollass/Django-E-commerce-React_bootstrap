{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladimir\\\\Desktop\\\\shops\\\\django_react\\\\frontend\\\\templates\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const serverUrl = 'http://localhost:8000/';\n  const [isCsrf, setIsCsrf] = useState(null);\n  const [isLogin, setIsLogin] = useState('');\n  const [isPassword, setIsPassword] = useState('');\n  const [isError, setIsError] = useState(null);\n  const [isAuth, setIsAuth] = useState(false);\n  const [name, setname] = useState('');\n  useEffect(() => {\n    getCsrfs();\n    // getSession()\n  }, []);\n  const isResponseOk = res => {\n    if (!(res.status >= 200 && res.status <= 299)) {\n      throw Error(res.statusText);\n    }\n  };\n  const getCsrfs = () => {\n    try {\n      const csrftoken = document.cookie.split('; ').find(row => row.startsWith('csrftoken=')).split('=')[1];\n      setIsCsrf(csrftoken);\n      setIsAuth(true);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  // Если необходимо авторизоваться, запрашиваем CSRF-токен у сервера\n  const getCSRF = () => {\n    axios.get(serverUrl + 'api/csrf/', {\n      withCredentials: true\n    }).then(res => {\n      isResponseOk(res);\n      const csrfToken = res.headers.get('X-CSRFToken');\n      setIsCsrf(csrfToken);\n      return csrfToken;\n    }).catch(err => console.error(err));\n  };\n\n  // Полученный CSRF-токен пихаем в заголовок и отправляем серверу\n  const login = () => {\n    const data = {\n      username: isLogin,\n      password: isPassword\n    };\n    axios.post(serverUrl + 'api/login/', data).then(res => {\n      isResponseOk(res);\n      getCSRF();\n      setIsAuth(true);\n      setname(data.username);\n      setIsError(null);\n      document.cookie = 'loginInfo=' + isLogin;\n      userInfo();\n    }).catch(err => {\n      console.error(err);\n      setIsError(\"Неверные данные\");\n    });\n  };\n  const logout = () => {\n    fetch('http://localhost:8000/api/logout/', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'X-CSRFToken': isCsrf\n      }\n    }).then(response => {\n      setIsAuth(false);\n      setIsCsrf(null);\n      document.cookie = \"csrftoken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n      document.cookie = \"loginInfo=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n      window.location.href('/');\n    }).catch(error => {\n      setIsError('Ошибка при выходе');\n    });\n  };\n  const userInfo = () => {\n    const nameInfo = document.cookie.split(';').find(row => row.startsWith('loginInfo=')).split('=')[1];\n    return nameInfo;\n  };\n  function changePassword(e) {\n    setIsPassword(e.target.value);\n  }\n  function changeLogin(e) {\n    setIsLogin(e.target.value);\n  }\n  function submitForm(e) {\n    e.preventDefault();\n    login();\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: isAuth === false ? /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"login\",\n        children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"login\",\n        id: \"login\",\n        className: \"{style.field}\",\n        onChange: changeLogin,\n        value: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        htmlFor: \"password\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        className: \"{style.field}\",\n        onChange: changePassword,\n        value: isPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this), isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"{style.error}\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        href: '/logins',\n        onClick: submitForm,\n        className: \"{style.sendBtn}\",\n        children: \" \\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"{style.authStatus}\",\n        children: [\"\\u0412\\u044B -\", /*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"{style.name}\",\n          children: isCsrf ? ' ' + userInfo() : ' неавторизованы'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        href: '/login',\n        onClick: logout,\n        className: \"{style.logoutBtn}\",\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"biaRHuWmV3gBSao2V+jY6U0Ielw=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","Container","Form","redirect","jsxDEV","_jsxDEV","Login","_s","serverUrl","isCsrf","setIsCsrf","isLogin","setIsLogin","isPassword","setIsPassword","isError","setIsError","isAuth","setIsAuth","name","setname","getCsrfs","isResponseOk","res","status","Error","statusText","csrftoken","document","cookie","split","find","row","startsWith","e","console","error","getCSRF","get","withCredentials","then","csrfToken","headers","catch","err","login","data","username","password","post","userInfo","logout","fetch","credentials","method","response","window","location","href","nameInfo","changePassword","target","value","changeLogin","submitForm","preventDefault","children","Label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","className","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vladimir/Desktop/shops/django_react/frontend/templates/src/pages/login.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, Container, Form} from \"react-bootstrap\";\r\nimport {redirect} from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const serverUrl = 'http://localhost:8000/'\r\n\r\n    const [isCsrf, setIsCsrf] = useState(null)\r\n    const [isLogin, setIsLogin] = useState('')\r\n    const [isPassword, setIsPassword] = useState('')\r\n    const [isError, setIsError] = useState(null)\r\n    const [isAuth, setIsAuth] = useState(false)\r\n    const [name, setname] = useState('')\r\n\r\n    useEffect(() => {\r\n        getCsrfs()\r\n        // getSession()\r\n    }, [])\r\n\r\n    const isResponseOk = (res) => {\r\n        if (!(res.status >= 200 && res.status <= 299)) {\r\n            throw Error(res.statusText);\r\n        }\r\n    }\r\n\r\n    const getCsrfs = () => {\r\n        try {\r\n            const csrftoken = document.cookie.split('; ')\r\n                .find(row => row.startsWith('csrftoken=')).split('=')[1];\r\n            setIsCsrf(csrftoken);\r\n            setIsAuth(true)\r\n\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n    }\r\n    // Если необходимо авторизоваться, запрашиваем CSRF-токен у сервера\r\n    const getCSRF = () => {\r\n        axios.get(serverUrl + 'api/csrf/', {withCredentials: true})\r\n            .then((res) => {\r\n                isResponseOk(res);\r\n\r\n                const csrfToken = res.headers.get('X-CSRFToken');\r\n                setIsCsrf(csrfToken);\r\n                return csrfToken;\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n\r\n    // Полученный CSRF-токен пихаем в заголовок и отправляем серверу\r\n    const login = () => {\r\n        const data = {username: isLogin, password: isPassword}\r\n        axios.post(serverUrl + 'api/login/', data)\r\n            .then((res) => {\r\n                isResponseOk(res);\r\n                getCSRF()\r\n                setIsAuth(true);\r\n                setname(data.username);\r\n                setIsError(null);\r\n                document.cookie = 'loginInfo='+ isLogin;\r\n                userInfo()\r\n\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                setIsError(\"Неверные данные\")\r\n            });\r\n    }\r\n    const logout = () => {\r\n        fetch('http://localhost:8000/api/logout/', {\r\n            credentials: 'include',\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'X-CSRFToken': isCsrf,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                setIsAuth(false);\r\n                setIsCsrf(null);\r\n                document.cookie = \"csrftoken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n                document.cookie = \"loginInfo=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n                window.location.href('/')\r\n\r\n            })\r\n            .catch((error) => {\r\n                setIsError('Ошибка при выходе');\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const userInfo = () => {\r\n        const nameInfo = document.cookie.split(';')\r\n                .find(row => row.startsWith('loginInfo=')).split('=')[1];\r\n        return nameInfo;\r\n    }\r\n\r\n\r\n    function changePassword(e) {\r\n        setIsPassword(e.target.value)\r\n    }\r\n\r\n    function changeLogin(e) {\r\n        setIsLogin(e.target.value)\r\n    }\r\n\r\n    function submitForm(e) {\r\n        e.preventDefault()\r\n        login()\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n\r\n            {\r\n                isAuth === false ?\r\n                    <Form>\r\n                        <Form.Label htmlFor=\"login\">Логин</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"login\"\r\n                            id=\"login\"\r\n                            className='{style.field}'\r\n                            onChange={changeLogin}\r\n                            value={isLogin}\r\n                        />\r\n\r\n                        <Form.Label htmlFor=\"password\">Пароль</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            className='{style.field}'\r\n                            onChange={changePassword}\r\n                            value={isPassword}\r\n                        />\r\n\r\n                        {\r\n                            isError ? <div className='{style.error}'>{isError}</div> : null\r\n                        }\r\n\r\n                        <Button type=\"submit\" href={'/logins'} onClick={submitForm}\r\n                                className='{style.sendBtn}'> Войти</Button>\r\n                    </Form>\r\n                    :\r\n                    <div>\r\n                        <Form className='{style.authStatus}'>\r\n                            Вы -\r\n                            <Form.Label className='{style.name}'>\r\n                                {\r\n                                    isCsrf ? ' ' + userInfo() : ' неавторизованы'\r\n                                }\r\n                            </Form.Label>\r\n\r\n                        </Form>\r\n                        <Button type=\"submit\" href={'/login'} onClick={logout} className='{style.logoutBtn}'>Выйти\r\n                        </Button>\r\n                    </div>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}